{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baps\\\\Desktop\\\\PokemonApp\\\\src\\\\Components\\\\listings\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Pokeinfo from './Pokeinfo';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [pokeData, setPokeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n  const [nextUrl, setNextUrl] = useState(null);\n  const [pokeDex, setPokeDex] = useState(null);\n\n  const fetchData = async fetchUrl => {\n    try {\n      setLoading(true);\n      const response = await axios.get(fetchUrl);\n      const {\n        results,\n        next\n      } = response.data;\n      const pokemonDetails = await Promise.all(results.map(async result => {\n        const res = await axios.get(result.url);\n        return res.data;\n      }));\n      setPokeData(prevData => [...prevData, ...pokemonDetails]);\n      setNextUrl(next);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleScroll = () => {\n    const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const fullHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n\n    if (scrollTop + windowHeight >= fullHeight && !loading && nextUrl) {\n      fetchData(nextUrl);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(url);\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        pokemon: pokeData,\n        loading: loading,\n        infoPokemon: poke => setPokeDex(poke)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-content\",\n      children: /*#__PURE__*/_jsxDEV(Pokeinfo, {\n        data: pokeDex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"2JiNJ5vUeCHfBOaZkb0EAUr5CYI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/baps/Desktop/PokemonApp/src/Components/listings/Main.jsx"],"names":["React","useState","useEffect","Card","Pokeinfo","axios","Main","pokeData","setPokeData","loading","setLoading","url","setUrl","nextUrl","setNextUrl","pokeDex","setPokeDex","fetchData","fetchUrl","response","get","results","next","data","pokemonDetails","Promise","all","map","result","res","prevData","error","console","handleScroll","scrollTop","document","documentElement","body","windowHeight","window","innerHeight","clientHeight","fullHeight","scrollHeight","addEventListener","removeEventListener","poke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,oCAAD,CAA9B;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMgB,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACpC,QAAI;AACFR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMS,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,QAAV,CAAvB;AACA,YAAM;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBH,QAAQ,CAACI,IAAnC;AACA,YAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAR,CAC3BL,OAAO,CAACM,GAAR,CAAY,MAAOC,MAAP,IAAkB;AAC5B,cAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACe,GAAN,CAAUQ,MAAM,CAACjB,GAAjB,CAAlB;AACA,eAAOkB,GAAG,CAACN,IAAX;AACD,OAHD,CAD2B,CAA7B;AAMAf,MAAAA,WAAW,CAAEsB,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,GAAGN,cAAjB,CAAf,CAAX;AACAV,MAAAA,UAAU,CAACQ,IAAD,CAAV;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbD,CAaE,OAAOqB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAlBD;;AAoBA,QAAMuB,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,SAAzB,IAAsCC,QAAQ,CAACE,IAAT,CAAcH,SAAtE;AACA,UAAMI,YAAY,GAAGC,MAAM,CAACC,WAAP,IAAsBL,QAAQ,CAACC,eAAT,CAAyBK,YAA/C,IAA+DN,QAAQ,CAACE,IAAT,CAAcI,YAAlG;AACA,UAAMC,UAAU,GAAGP,QAAQ,CAACC,eAAT,CAAyBO,YAAzB,IAAyCR,QAAQ,CAACE,IAAT,CAAcM,YAA1E;;AAEA,QAAIT,SAAS,GAAGI,YAAZ,IAA4BI,UAA5B,IAA0C,CAACjC,OAA3C,IAAsDI,OAA1D,EAAmE;AACjEI,MAAAA,SAAS,CAACJ,OAAD,CAAT;AACD;AACF,GARD;;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS,CAACN,GAAD,CAAT;AAEA4B,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCX,YAAlC;AAEA,WAAO,MAAM;AACXM,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCZ,YAArC;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE1B,QAAf;AAAyB,QAAA,OAAO,EAAEE,OAAlC;AAA2C,QAAA,WAAW,EAAGqC,IAAD,IAAU9B,UAAU,CAAC8B,IAAD;AAA5E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE/B;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzDD;;GAAMT,I;;KAAAA,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from './Card';\r\nimport Pokeinfo from './Pokeinfo';\r\nimport axios from 'axios';\r\n\r\nconst Main = () => {\r\n  const [pokeData, setPokeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [pokeDex, setPokeDex] = useState(null);\r\n\r\n  const fetchData = async (fetchUrl) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(fetchUrl);\r\n      const { results, next } = response.data;\r\n      const pokemonDetails = await Promise.all(\r\n        results.map(async (result) => {\r\n          const res = await axios.get(result.url);\r\n          return res.data;\r\n        })\r\n      );\r\n      setPokeData((prevData) => [...prevData, ...pokemonDetails]);\r\n      setNextUrl(next);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n    const fullHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\r\n\r\n    if (scrollTop + windowHeight >= fullHeight && !loading && nextUrl) {\r\n      fetchData(nextUrl);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(url);\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left-content\">\r\n        <Card pokemon={pokeData} loading={loading} infoPokemon={(poke) => setPokeDex(poke)} />\r\n      </div>\r\n      <div className=\"right-content\">\r\n        <Pokeinfo data={pokeDex} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}