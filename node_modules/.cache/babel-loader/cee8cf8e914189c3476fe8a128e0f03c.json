{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baps\\\\Desktop\\\\PokemonApp\\\\src\\\\Components\\\\listings\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './Card';\nimport Pokeinfo from './Pokeinfo';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [pokeData, setPokeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n  const [nextUrl, setNextUrl] = useState();\n  const [prevUrl, setPrevUrl] = useState();\n  const [pokeDex, setPokeDex] = useState();\n\n  const pokeFun = async () => {\n    setLoading(true);\n    const res = await axios.get(url);\n    setNextUrl(res.data.next);\n    setPrevUrl(res.data.previous);\n    getPokemon(res.data.results);\n    setLoading(false);\n  };\n\n  const getPokemon = async res => {\n    for (let i = 0; i < res.length; i++) {\n      const result = await axios.get(res[i].url);\n      setPokeData(state => {\n        state = [...state, result.data];\n        state.sort((a, b) => a.id > b.id ? 1 : -1);\n        return state;\n      });\n    }\n  };\n\n  useEffect(() => {\n    pokeFun();\n  }, [url]);\n\n  const loadMoreData = () => {\n    if (nextUrl) {\n      setPokeData([]);\n      setUrl(nextUrl);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-content\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          pokemon: pokeData,\n          loading: loading,\n          infoPokemon: poke => setPokeDex(poke)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [prevUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setPokeData([]);\n              setUrl(prevUrl);\n            },\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), nextUrl && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: pokeData.length,\n            next: loadMoreData,\n            hasMore: true,\n            loader: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this),\n            children: [\"onClick=\", () => {\n              setPokeData([]);\n              setUrl(nextUrl);\n            }, \"Next\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-content\",\n        children: /*#__PURE__*/_jsxDEV(Pokeinfo, {\n          data: pokeDex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"m4ZoRBEcRfucO8tF5NRFyzfsRgI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/baps/Desktop/PokemonApp/src/Components/listings/Main.jsx"],"names":["React","Card","Pokeinfo","axios","useState","useEffect","InfiniteScroll","Main","pokeData","setPokeData","loading","setLoading","url","setUrl","nextUrl","setNextUrl","prevUrl","setPrevUrl","pokeDex","setPokeDex","pokeFun","res","get","data","next","previous","getPokemon","results","i","length","result","state","sort","a","b","id","loadMoreData","poke"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Card from './Card'\r\nimport Pokeinfo from './Pokeinfo'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nconst Main = () => {\r\n  const [pokeData, setPokeData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/')\r\n  const [nextUrl, setNextUrl] = useState()\r\n  const [prevUrl, setPrevUrl] = useState()\r\n  const [pokeDex, setPokeDex] = useState()\r\n\r\n  const pokeFun = async () => {\r\n    setLoading(true)\r\n    const res = await axios.get(url)\r\n    setNextUrl(res.data.next)\r\n    setPrevUrl(res.data.previous)\r\n    getPokemon(res.data.results)\r\n    setLoading(false)\r\n  }\r\n  const getPokemon = async (res) => {\r\n    for (let i = 0; i < res.length; i++) {\r\n      const result = await axios.get(res[i].url)\r\n      setPokeData((state) => {\r\n        state = [...state, result.data]\r\n        state.sort((a, b) => (a.id > b.id ? 1 : -1))\r\n        return state\r\n      })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    pokeFun()\r\n  }, [url])\r\n\r\n  const loadMoreData = () => {\r\n    if (nextUrl) {\r\n      setPokeData([])\r\n      setUrl(nextUrl)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"left-content\">\r\n          <Card\r\n            pokemon={pokeData}\r\n            loading={loading}\r\n            infoPokemon={(poke) => setPokeDex(poke)}\r\n          />\r\n\r\n          <div className=\"btn-group\">\r\n            {prevUrl && (\r\n              <button\r\n                onClick={() => {\r\n                  setPokeData([])\r\n                  setUrl(prevUrl)\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n            )}\r\n\r\n            {nextUrl && (\r\n              <InfiniteScroll\r\n                dataLength={pokeData.length}\r\n                next={loadMoreData}\r\n                hasMore={true}\r\n                loader={<button>Loading...</button>}\r\n              >\r\n                {/* <button */}\r\n                  onClick={() => {\r\n                    setPokeData([])\r\n                    setUrl(nextUrl)\r\n                  }}\r\n                {/* > */}\r\n                  Next\r\n                {/* </button> */}\r\n              </InfiniteScroll>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"right-content\">\r\n          <Pokeinfo data={pokeDex} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}