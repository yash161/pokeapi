{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baps\\\\Desktop\\\\PokemonApp\\\\src\\\\Components\\\\listings\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './Card';\nimport Pokeinfo from './Pokeinfo';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [pokeData, setPokeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n  const [pokeDex, setPokeDex] = useState();\n  const [fetchingData, setFetchingData] = useState(false);\n\n  const fetchPokemon = async url => {\n    if (fetchingData) return; // If data is already being fetched, do not make duplicate requests\n\n    setFetchingData(true);\n    setLoading(true);\n\n    try {\n      const res = await axios.get(url);\n      const pokemonList = res.data.results;\n      const nextUrl = res.data.next;\n\n      for (const pokemon of pokemonList) {\n        const result = await axios.get(pokemon.url);\n        setPokeData(prevState => {\n          const updatedList = [...prevState, result.data];\n          updatedList.sort((a, b) => a.id > b.id ? 1 : -1);\n          return updatedList;\n        });\n      }\n\n      setLoading(false);\n\n      if (nextUrl) {\n        setUrl(nextUrl);\n      }\n    } catch (error) {\n      console.log('Error fetching Pokémon data:', error);\n    } finally {\n      setFetchingData(false);\n    }\n  };\n\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      fetchPokemon(url);\n    }\n  };\n\n  useEffect(() => {\n    fetchPokemon(url);\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-content\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          pokemon: pokeData,\n          loading: loading,\n          infoPokemon: poke => setPokeDex(poke)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-content\",\n        children: /*#__PURE__*/_jsxDEV(Pokeinfo, {\n          data: pokeDex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"oTEuKFafIn0mgr9Q3bi0hJ2LnlA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/baps/Desktop/PokemonApp/src/Components/listings/Main.jsx"],"names":["React","Card","Pokeinfo","axios","useState","useEffect","Main","pokeData","setPokeData","loading","setLoading","url","setUrl","pokeDex","setPokeDex","fetchingData","setFetchingData","fetchPokemon","res","get","pokemonList","data","results","nextUrl","next","pokemon","result","prevState","updatedList","sort","a","b","id","error","console","log","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","poke"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\nimport Pokeinfo from './Pokeinfo';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Main = () => {\r\n  const [pokeData, setPokeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\r\n  const [pokeDex, setPokeDex] = useState();\r\n  const [fetchingData, setFetchingData] = useState(false);\r\n\r\n  const fetchPokemon = async (url) => {\r\n    if (fetchingData) return; // If data is already being fetched, do not make duplicate requests\r\n    setFetchingData(true);\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(url);\r\n      const pokemonList = res.data.results;\r\n      const nextUrl = res.data.next;\r\n\r\n      for (const pokemon of pokemonList) {\r\n        const result = await axios.get(pokemon.url);\r\n        setPokeData((prevState) => {\r\n          const updatedList = [...prevState, result.data];\r\n          updatedList.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n          return updatedList;\r\n        });\r\n      }\r\n\r\n      setLoading(false);\r\n\r\n      if (nextUrl) {\r\n        setUrl(nextUrl);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching Pokémon data:', error);\r\n    } finally {\r\n      setFetchingData(false);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop ===\r\n      document.documentElement.offsetHeight\r\n    ) {\r\n      fetchPokemon(url);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemon(url);\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"left-content\">\r\n          <Card\r\n            pokemon={pokeData}\r\n            loading={loading}\r\n            infoPokemon={(poke) => setPokeDex(poke)}\r\n          />\r\n        </div>\r\n        <div className=\"right-content\">\r\n          <Pokeinfo data={pokeDex} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}